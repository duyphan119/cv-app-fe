import { Box, Button, Pagination, Paper } from "@mui/material";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useState, FormEvent } from "react";
import { getAllProducts } from "../../../apis/product";
import { AdminLayout } from "../../../layouts";
import { CODE_OK, MSG_SUCCESS } from "../../../utils/constants";
import {
  Filter,
  Product,
  QueryParams,
  ResponseItems,
  SortState,
} from "../../../utils/types";
import CheckIcon from "@mui/icons-material/Check";
import ClearIcon from "@mui/icons-material/Clear";
type Props = {
  productData?: ResponseItems<Product>;
};
const LIMIT = 10;
const Products = (props: Props) => {
  const router = useRouter();
  const { p } = router.query;
  const [page, setPage] = useState<number>(p ? +p : 1);
  const [sortBy, setSortBy] = useState<string>("");
  const [sortType, setSortType] = useState<string>("asc");
  console.log(props.productData);
  const handleChange = (p: number) => {
    const obj: any = {
      ...(page && page > 1 ? { p: page } : {}),
      ...(sortBy !== "" ? { sort_by: sortBy, sort_type: sortType } : {}),
    };
    const url = new URLSearchParams(obj).toString();
    url && router.push(router.pathname + "?" + url);
  };

  const handleSort = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const obj: any = {
      ...(page && page > 1 ? { p: page } : {}),
      sort_by: sortBy,
      sort_type: sortType,
    };
    const url = new URLSearchParams(obj).toString();
    url && router.push(router.pathname + "?" + url);
  };
  return (
    <AdminLayout pageTitle="Sản phẩm">
      <>
        <Head>
          <title>Quản lý sản phẩm</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Paper sx={{ padding: "16px" }}>
          <div
            style={{ fontSize: "2rem", fontWeight: "600", marginBottom: 16 }}
          >
            Danh sách sản phẩm
          </div>
          <Box
            display="flex"
            justifyContent="space-between"
            alignItems="center"
            marginY="16px"
          >
            <Box display="flex" gap="32px">
              <div
                style={{
                  display: "flex",
                  gap: "8px",
                }}
              >
                <input type="search" placeholder="Tìm theo tên" />
                <button className="btnSearch">Tìm</button>
              </div>
              <form
                style={{
                  display: "flex",
                  gap: "8px",
                }}
                onSubmit={handleSort}
              >
                <select
                  onChange={(e) => setSortBy(e.target.value)}
                  value={sortBy}
                >
                  <option value="">Sắp xếp theo</option>
                  <option value="name">Tên sản phẩm</option>
                </select>
                <select
                  onChange={(e) => setSortType(e.target.value)}
                  value={sortType}
                >
                  <option value="asc">Tăng dần</option>
                  <option value="desc">Giảm dần</option>
                </select>
                <button
                  className="btnSort"
                  type="submit"
                  disabled={sortBy === ""}
                >
                  Sắp xếp
                </button>
              </form>
            </Box>
            <Box>
              <Link href="/admin/san-pham/them">
                <button className="btnAdd">Thêm mới</button>
              </Link>
            </Box>
          </Box>
          <table className="table">
            <thead>
              <tr>
                <th style={{ width: 40 }}>
                  <label htmlFor="checkAll">
                    <input type="checkbox" id="checkAll" />
                  </label>
                </th>
                <th style={{ width: 72 }}>#</th>
                <th style={{ textAlign: "left" }}>Tên sản phẩm</th>
                <th>Danh mục</th>
                <th>Hiển thị</th>
                <th style={{ width: 120 }}>Hình ảnh</th>
                <th style={{ width: 120 }}>Biến thể</th>
                <th style={{ width: 120 }}></th>
              </tr>
            </thead>
            <tbody>
              {props.productData?.items.map(
                (product: Product, index: number) => {
                  return (
                    <tr key={product.id}>
                      <td>
                        <label htmlFor={"check" + product.id}>
                          <input type="checkbox" id={"check" + product.id} />
                        </label>
                      </td>
                      <td style={{ textAlign: "center" }}>{index + 1}</td>

                      <td style={{ textAlign: "center" }}>
                        <div
                          style={{
                            display: "flex",
                            alignItems: "center",
                            gap: "16px",
                          }}
                        >
                          <Image
                            alt=""
                            width={72}
                            height={72}
                            priority={true}
                            src={product.thumbnail}
                          />
                          {product.name}
                        </div>
                      </td>
                      <td style={{ width: "200px", textAlign: "center" }}>
                        {product.groupProduct?.name}
                      </td>
                      <td
                        style={{
                          textAlign: "center",
                          cursor: "pointer",
                          width: 90,
                        }}
                      >
                        {product.deletedAt ? (
                          <ClearIcon style={{ color: "#00695f" }} />
                        ) : (
                          <CheckIcon style={{ color: "#33eb91" }} />
                        )}
                      </td>
                      <td style={{ textAlign: "center" }}>
                        <Button>Quản lý</Button>
                      </td>
                      <td style={{ textAlign: "center" }}>
                        <Button>Quản lý</Button>
                      </td>
                      <td style={{ textAlign: "right" }}>
                        <button className="btnEdit">Sửa</button>
                        <button
                          className="btnDelete"
                          style={{ marginLeft: "8px" }}
                        >
                          Xóa
                        </button>
                      </td>
                    </tr>
                  );
                }
              )}
            </tbody>
          </table>
          <Pagination
            page={page}
            count={
              props.productData ? Math.ceil(props.productData.count / LIMIT) : 0
            }
            sx={{ ul: { justifyContent: "center", marginTop: "16px" } }}
            variant="outlined"
            shape="rounded"
            showLastButton
            showFirstButton
            onChange={(e, page) => handleChange(page)}
            color="primary"
          />
        </Paper>
      </>
    </AdminLayout>
  );
};

export default Products;

export async function getServerSideProps(context: any) {
  const { p, sort_by, sort_type } = context.query;
  const res = await getAllProducts({
    p: p || 1,
    limit: LIMIT,
    sort_by,
    sort_type,
  });
  const { message, data } = res;
  return message === MSG_SUCCESS
    ? {
        props: { productData: data },
      }
    : {
        notFound: true,
      };
}
