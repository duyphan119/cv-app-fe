import { Button, Grid, Paper } from "@mui/material";
import Head from "next/head";
import React, { useEffect, ChangeEvent, useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import { getAllGroupProducts } from "../../../apis/groupProduct";
import { AdminLayout } from "../../../layouts";
import { MSG_SUCCESS } from "../../../utils/constants";
import { GroupProduct } from "../../../utils/types";
import { useRouter } from "next/router";
import "react-quill/dist/quill.snow.css";
import dynamic from "next/dynamic";
import { privateAxios } from "../../../config/configAxios";
import { createProduct } from "../../../apis/product";
import { uploadSingle } from "../../../apis/upload";
const ReactQuill = dynamic(() => import("react-quill"), { ssr: false });

type Props = {};

type ProductInputs = {
  name: string;
  groupProductId: number;
  slug: string;
  description: string;
  detail: string;
  price: number;
  inventory: number;
};

const AddProduct = (props: Props) => {
  const router = useRouter();
  const [detail, setDetail] = useState<string>("");
  const [files, setFiles] = useState<FileList | null>(null);
  const [groupProducts, setGroupProducts] = useState<GroupProduct[]>([]);
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<ProductInputs>();
  const onSubmit: SubmitHandler<ProductInputs> = async (data) => {
    try {
      if (files) {
        const formData = new FormData();
        formData.append("image", files[0]);
        const { message, data: dataImage } = await uploadSingle(formData);
        if (message === MSG_SUCCESS) {
          console.log("Uploaded file: ", dataImage);
          const url = dataImage.secure_url;
          const { message: msg } = await createProduct({
            ...data,
            detail,
            groupProductId: +data.groupProductId,
            thumbnail: url,
          });
          if (msg === MSG_SUCCESS) {
            router.push("/admin/san-pham");
          }
        }
      }
    } catch (error) {
      console.log(error);
    }
  };

  const handleBack = () => {
    router.back();
  };

  useEffect(() => {
    (async () => {
      const { message, data } = await getAllGroupProducts();
      if (message === MSG_SUCCESS) {
        setGroupProducts(data.items);
      }
    })();
  }, []);

  return (
    <AdminLayout pageTitle="Sản phẩm">
      <>
        <Head>
          <title>Thêm mới sản phẩm</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Paper sx={{ padding: "16px" }}>
          <div
            style={{ fontSize: "2rem", fontWeight: "600", marginBottom: 16 }}
          >
            Thông tin thêm mới sản phẩm
          </div>
          <form onSubmit={handleSubmit(onSubmit)}>
            <Grid container rowSpacing={3} columnSpacing={3}>
              <Grid item xs={12}>
                <div className="form-group">
                  {errors.groupProductId &&
                    errors.groupProductId.type === "required" && (
                      <div className="form-error">
                        Nhóm sản phẩm không được để trống
                      </div>
                    )}
                  <select
                    className="form-control"
                    {...register("groupProductId", { required: true })}
                  >
                    <option value="">Chọn nhóm sản phẩm</option>
                    {groupProducts.map((item: GroupProduct) => {
                      return (
                        <option value={item.id} key={item.id}>
                          {item.name}
                        </option>
                      );
                    })}
                  </select>
                  <label
                    htmlFor="groupProductId"
                    className="form-label required"
                  >
                    Nhóm sản phẩm
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <input
                    type="text"
                    id="name"
                    className="form-control"
                    autoComplete="off"
                    {...register("name")}
                  />
                  <label htmlFor="name" className="form-label required">
                    Tên sản phẩm
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <input
                    type="text"
                    id="slug"
                    className="form-control"
                    autoComplete="off"
                    {...register("slug")}
                  />
                  <label htmlFor="slug" className="form-label">
                    Bí danh
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <input
                    type="number"
                    id="price"
                    className="form-control"
                    autoComplete="off"
                    {...register("price")}
                  />
                  <label htmlFor="price" className="form-label">
                    Giá bán
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <input
                    type="number"
                    id="inventory"
                    className="form-control"
                    autoComplete="off"
                    {...register("inventory")}
                  />
                  <label htmlFor="inventory" className="form-label">
                    Số lượng
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <textarea
                    id="description"
                    className="form-control"
                    autoComplete="off"
                    rows={4}
                    {...register("description")}
                  ></textarea>
                  <label htmlFor="description" className="form-label">
                    Mô tả
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <div className="form-group">
                  <input
                    type="file"
                    id="thumbnail"
                    className="form-control"
                    autoComplete="off"
                    onChange={(e: ChangeEvent<HTMLInputElement>) =>
                      setFiles(e.target.files)
                    }
                  />
                  <label htmlFor="thumbnail" className="form-label">
                    Ảnh đại diện
                  </label>
                </div>
              </Grid>
              <Grid item xs={12}>
                <ReactQuill theme="snow" value={detail} onChange={setDetail} />
              </Grid>
              <Grid item xs={12}>
                <Button
                  variant="outlined"
                  color="secondary"
                  onClick={handleBack}
                >
                  Quay lại
                </Button>
                <Button
                  variant="contained"
                  type="submit"
                  style={{ marginLeft: 8 }}
                >
                  Lưu
                </Button>
              </Grid>
            </Grid>
          </form>
        </Paper>
      </>
    </AdminLayout>
  );
};

export default AddProduct;
