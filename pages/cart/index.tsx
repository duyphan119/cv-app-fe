import DeleteOutlineIcon from "@mui/icons-material/DeleteOutline";
import { Container, IconButton } from "@mui/material";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React, { useMemo } from "react";
import { useCartContext } from "../../context/CartContext";
import { DefaultLayout } from "../../layouts";
import emptyCartPng from "../../public/empty-cart.png";
import styles from "../../styles/Cart.module.css";
import { getPriceCartItem, getThumbnailOrderItem } from "../../utils/helpers";
import { OrderItem } from "../../utils/types";

type Props = {};

type CartItemProps = {
  item: OrderItem;
};

const CartItem = React.memo((props: CartItemProps) => {
  const { updateCart, deleteItem } = useCartContext();

  const handleUpdateItem = (newQuantity: number) => {
    updateCart({ ...props.item, quantity: newQuantity });
  };

  const handleDeleteItem = () => {
    deleteItem(props.item.id);
  };

  const getPrice = useMemo(() => {
    return props.item ? getPriceCartItem(props.item) : 0;
  }, [props.item]);

  return (
    <tr>
      <td>
        <div className={styles["td-product"]}>
          <IconButton color="error" onClick={handleDeleteItem}>
            <DeleteOutlineIcon />
          </IconButton>
          <div>
            <Image
              width={72}
              height={72}
              priority={true}
              alt=""
              src={props.item ? getThumbnailOrderItem(props.item) : ""}
            />
          </div>
          <div>
            <Link
              href={{
                pathname: "/product/[slug]",
                query: { slug: props.item.product?.slug },
              }}
            >
              {props.item.product?.name}
            </Link>
            {props.item.productVariant ? (
              <div className={styles.variant}>
                {props.item.productVariant.name}
              </div>
            ) : null}
          </div>
        </div>
      </td>
      <td>{getPrice}</td>
      <td>
        <div className={styles["quantity-wrapper"]}>
          <div>{getPrice}</div>
          <div className={styles.quantity}>
            <button
              className={styles.inc}
              onClick={() => handleUpdateItem(props.item.quantity - 1)}
            >
              -
            </button>
            {props.item.quantity}
            <button
              className={styles.desc}
              onClick={() => handleUpdateItem(props.item.quantity + 1)}
            >
              +
            </button>
          </div>
          <div>{props.item.quantity * getPrice}</div>
        </div>
      </td>
      <td>{props.item.quantity * getPrice}</td>
    </tr>
  );
});

const TableCart = () => {
  const { cart } = useCartContext();

  return cart ? (
    <table className={styles["table-cart"]}>
      <thead>
        <tr>
          <th>Sản phẩm</th>
          <th>Giá</th>
          <th>Số lượng</th>
          <th>Tổng</th>
        </tr>
      </thead>
      <tbody>
        {cart.items.map((item: OrderItem) => {
          return <CartItem key={item.id} item={item} />;
        })}
      </tbody>
    </table>
  ) : null;
};

const CartResult = () => {
  const { total } = useCartContext();
  return (
    <div className={styles["cart-result"]}>
      <div className={styles.row}>
        <span>Giá gốc</span>
        <span>{total}</span>
      </div>
      <div className={styles.row}>
        <span>Tổng cộng</span>
        <span>{total}</span>
      </div>
      <Link href="/payment" className={styles.checkout}>
        Thanh toán
      </Link>
    </div>
  );
};

const EmptyCart = () => {
  return (
    <div className={styles.empty}>
      <div>
        <Image
          src={emptyCartPng}
          alt=""
          width={360}
          height={360}
          priority={true}
        />
      </div>
      <p>Giỏ hàng của bạn đang trống</p>
      <Link href="/product">Xem tất cả sản phẩm</Link>
    </div>
  );
};

const Cart = (props: Props) => {
  const { count, loading } = useCartContext();
  return (
    <DefaultLayout>
      <>
        <Head>
          <title>Giỏ hàng</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          {!loading ? (
            count ? (
              <Container maxWidth="lg">
                <h1>Giỏ hàng của bạn</h1>
                <TableCart />
                <CartResult />
              </Container>
            ) : (
              <EmptyCart />
            )
          ) : null}
        </main>
      </>
    </DefaultLayout>
  );
};

export default Cart;
